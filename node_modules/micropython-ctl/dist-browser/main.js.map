{"version":3,"sources":["webpack://MicroPythonCtl/./node_modules/base64-js/index.js","webpack://MicroPythonCtl/./node_modules/buffer/index.js","webpack://MicroPythonCtl/./node_modules/ieee754/index.js","webpack://MicroPythonCtl/./node_modules/isomorphic-ws/browser.js","webpack://MicroPythonCtl/./src/errors.ts","webpack://MicroPythonCtl/./src/main.ts","webpack://MicroPythonCtl/./src/python-scripts.ts","webpack://MicroPythonCtl/./src/settings.ts","webpack://MicroPythonCtl/./src/utils.ts","webpack://MicroPythonCtl/./src/webserver.ts","webpack://MicroPythonCtl/external \"body-parser\"","webpack://MicroPythonCtl/external \"crypto\"","webpack://MicroPythonCtl/external \"express\"","webpack://MicroPythonCtl/external \"node-fetch\"","webpack://MicroPythonCtl/external \"serialport\"","webpack://MicroPythonCtl/webpack/bootstrap","webpack://MicroPythonCtl/webpack/startup","webpack://MicroPythonCtl/webpack/runtime/global","webpack://MicroPythonCtl/webpack/runtime/node module decorator"],"names":["exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","constructor","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","ws","WebSocket","MozWebSocket","g","window","self","module","InvalidPassword","CouldNotConnect","ScriptExecutionError","fetch","webserver","WEBSERVER_PORT","delayMillis","delayMs","Promise","resolve","setTimeout","ConnectionMode","ConnectionState","ReplMode","RawReplState","RawReplReceivingResponseSubState","state","connectionMode","NETWORK","connectionState","CLOSED","connectionPath","port","wsConnectTimeout","wsConnectTimeoutTriggered","replMode","TERMINAL","replPassword","lastCommand","inputBuffer","errorBuffer","broadcastCommandOutputAsTerminalData","dataRawBuffer","isReadingUntil","readUntilData","readUntilBuffer","readUntilPromise","readUntilPromiseResolve","readUntilPromiseReject","readUntilTimeout","replPromise","replPromiseResolve","replPromiseReject","rawReplState","WAITING_FOR_SCRIPT","lastRunScriptTimeNeeded","receivingResponseSubState","SCRIPT_RECEIVING_ERROR","putFileSize","putFileData","putFileName","putFileDest","OPEN","SERIAL","PROXY","reject","debug","run","resp","status","json","deviceId","clearBuffer","path","CONNECTING","SerialPort","baudRate","on","err","connectProxy","handleProtocolData","onclose","createReplPromise","host","password","timeoutSec","readyState","warn","binaryType","close","onopen","clearTimeout","onmessage","event","handleWebsocketMessage","onerror","decodeWebreplBinaryResponse","_data","PUTFILE_WAITING_FIRST_RESPONSE","sendData","PUTFILE_WAITING_FINAL_RESPONSE","GETVER_WAITING_RESPONSE","dataStr","CLOSING","dataTrimmed","send","endsWith","binData","handlProtocolSpecialCommandsOutput","timeout","debug2","isConnected","onTerminalData","SCRIPT_RAW_MODE","SCRIPT_SENT","SCRIPT_RECEIVING_RESPONSE","SCRIPT_RECEIVING_OUTPUT","entry","SCRIPT_WAITING_FOR_END","SCRIPT_EXECUTED","exitRawRepl","char","wsSendData","serialSendData","isProxyConnection","isSerialDevice","closeWebsocket","script","options","disableDedent","dedent","runGcCollectBeforeCommand","url","stayInRawRepl","method","body","content","text","enterRawRepl","chunkSize","chunkDelayMillis","ceil","chunk","substring","millisStart","Date","now","broadcastOutputAsTerminalData","promise","resolveBeforeResult","scriptOutput","millisRuntime","round","readUntil","rec","directory","recursive","includeSha256","lines","runScript","PythonScripts","ls","line","filename","isDir","mTime","sha256","getFile","statOutput","stat","exists","targetFilename","checkIfSimilarBeforeUpload","isFileTheSame","dataHex","script1","index","scriptForChunk","deleteEverythingRecurive","oldPath","newPath","softReset","getFileHash","localHash","createHash","update","digest","infoType","infoData","map","part","_parts","uniqueId","memFree","fsBlockSize","fsBlocksTotal","fsBlocksFree","args","command","startsWith","manyPrints","fileSize","sha256Hash","DEBUG","mindent","forEach","l","match","indent","app","server","use","_device","_req","getState","post","req","success","query","scriptResponse","device","listen","MicroPythonDevice","parser","crypto","express","node","serialport","__webpack_module_cache__","__webpack_require__","moduleId","id","loaded","__webpack_modules__","globalThis","Function","nmd","paths","children"],"mappings":"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","file":"main.js","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nmodule.exports = ws\n","// tslint:disable: max-classes-per-file\nexport class InvalidPassword extends Error {\n  constructor(message: string) {\n    super(message);\n    Object.setPrototypeOf(this, InvalidPassword.prototype);\n  }\n}\n\nexport class CouldNotConnect extends Error {\n  constructor(message: string) {\n    super(message);\n    Object.setPrototypeOf(this, CouldNotConnect.prototype);\n  }\n}\n\nexport class ScriptExecutionError extends Error {\n  constructor(message: string) {\n    super(message);\n    Object.setPrototypeOf(this, ScriptExecutionError.prototype);\n  }\n}\n","/**\n * Async TypeScript MicroPython interface (for serial and network connections, REPL & WebREPL)\n *\n * - License: MIT\n * - Repository: https://github.com/metachris/micropython-ctl\n * - Author: chris@linuxuser.at / https://twitter.com/metachris\n */\nimport WebSocket from 'isomorphic-ws'\nimport { Buffer } from 'buffer/'\nimport { InvalidPassword, CouldNotConnect, ScriptExecutionError } from './errors'\nimport { debug, debug2, dedent } from './utils';\nimport * as PythonScripts from './python-scripts';\nimport { WEBSERVER_PORT } from './settings';\n\nexport { InvalidPassword, CouldNotConnect, ScriptExecutionError, WEBSERVER_PORT }  // allows easy importing from user scripts\n\n// Importing the following modules only if possible (won't be if run in browser)\nlet fetch: any;\nlet webserver: any;\ntry {\n  // tslint:disable-next-line: no-var-requires\n  fetch = require('node-fetch')\n  // tslint:disable-next-line: no-var-requires\n  webserver = require('./webserver')\n  // tslint:disable-next-line: no-empty\n} catch {}\n\nconst delayMillis = (delayMs: number) => new Promise(resolve => setTimeout(resolve, delayMs));\n\nexport enum ConnectionMode {\n  SERIAL = \"SERIAL\",\n  NETWORK = \"NETWORK\",\n  PROXY = 'PROXY',  // Commands are proxied over an existing connection (eg useful for running commands through an existing repl)\n}\n\nexport enum ConnectionState {\n  CONNECTING = 'CONNECTING',\n  OPEN = 'OPEN',\n  CLOSED = 'CLOSED',\n}\n\nexport enum ReplMode {\n  TERMINAL = 'TERMINAL',  // direct IO with user/program\n  SCRIPT_RAW_MODE = 'SCRIPT_RAW_MODE',  // RAW mode for script execution\n\n  GETVER_WAITING_RESPONSE = 'GETVER_WAITING_RESPONSE',\n  PUTFILE_WAITING_FIRST_RESPONSE = 'PUTFILE_WAITING_FIRST_RESPONSE',\n  PUTFILE_WAITING_FINAL_RESPONSE = 'PUTFILE_WAITING_FINAL_RESPONSE',\n}\n\nexport enum RawReplState {\n  WAITING_FOR_SCRIPT = 'WAITING_FOR_SCRIPT',\n  SCRIPT_SENT = 'SCRIPT_SENT',\n  SCRIPT_RECEIVING_RESPONSE = 'SCRIPT_RECEIVING_RESPONSE',\n  SCRIPT_EXECUTED = 'SCRIPT_EXECUTED',\n}\n\nenum RawReplReceivingResponseSubState {\n  SCRIPT_RECEIVING_OUTPUT = 'SCRIPT_RECEIVING_OUTPUT',\n  SCRIPT_RECEIVING_ERROR = 'SCRIPT_RECEIVING_ERROR',\n  SCRIPT_WAITING_FOR_END = 'SCRIPT_WAITING_FOR_END',\n}\n\ntype promiseResolve = (value: string | PromiseLike<string>) => void;\ntype promiseReject = (reason: any) => void;\n\nexport interface DeviceState {\n  connectionMode: ConnectionMode\n\n  connectionPath: string | null  // 'serial:/dev/ttyUSB0' or 'ws://192.168.1.120:8266'\n\n  port: any\n  ws: WebSocket | null\n  wsConnectTimeout: NodeJS.Timeout | undefined;\n  wsConnectTimeoutTriggered: boolean\n\n  connectionState: ConnectionState\n  replMode: ReplMode // only if replState is connected\n  replPassword: string\n\n  // promise helpers for user script\n  replPromise: Promise<string> | null;  // helper to await command executions\n  replPromiseResolve: promiseResolve | null\n  replPromiseReject: promiseReject | null\n\n  rawReplState: RawReplState\n\n  lastCommand: string\n  inputBuffer: string\n  errorBuffer: string\n  broadcastCommandOutputAsTerminalData: boolean\n\n  dataRawBuffer: Buffer\n\n  // Helpers for readUntil(..)\n  isReadingUntil: boolean\n  readUntilData: Buffer\n  readUntilBuffer: Buffer\n  readUntilTimeout: any\n  readUntilPromise: Promise<string> | null;  // helper to await command executions\n  readUntilPromiseResolve: promiseResolve | null\n  readUntilPromiseReject: promiseReject | null\n\n  lastRunScriptTimeNeeded: number\n  receivingResponseSubState: RawReplReceivingResponseSubState\n\n  putFileSize: number\n  putFileData: Uint8Array\n  putFileName: string\n  putFileDest: string\n}\n\ninterface WindowWithWebRepl extends Window {\n  [x: string]: any;\n  testWindow: any;\n  webReplState: DeviceState | undefined\n}\n\nexport interface FileListEntry {\n  filename: string,\n  isDir: boolean\n  size: number,\n  mTime: number,\n  sha256?: string\n}\n\ndeclare const window: WindowWithWebRepl;\n\n/**\n * Main class for a MicroPython device connection.\n *\n * See also https://github.com/metachris/micropython-ctl\n *\n * ```\n * const micropython = new MicroPythonDevice()\n *\n * // Connect to micropython device over network\n * await micropython.connectNetwork('DEVICE_IP', 'WEBREPL_PASSWORD')\n *\n * // Or connect to micropython device over serial interface\n * await micropython.connectSerial('/dev/ttyUSB0')\n *\n * // Run a Python script and capture the output\n * const output = await micropython.runScript('import os; print(os.listdir())')\n *\n * // List all files in the root\n * const files = await micropython.listFiles()\n * ```\n */\nexport class MicroPythonDevice {\n  private state: DeviceState\n\n  /**\n   * Callback that is triggered when the connection is lost or closed.\n   *\n   * ```typescript\n   * micropython.onclose = () => console.log('connection closed')\n   * ```\n   */\n  onclose: () => void\n\n  /**\n   * Callback to receive terminal (REPL) data\n   *\n   * ```typescript\n   * micropython.onTerminalData = (data) => process.stdout.write(data)\n   * ```\n   */\n  onTerminalData: (data: string) => void  // user callback\n\n  constructor() {\n    this.state = {\n      connectionMode: ConnectionMode.NETWORK,\n      connectionState: ConnectionState.CLOSED,\n\n      connectionPath: null,\n\n      port: null,\n      ws: null,\n      wsConnectTimeout: undefined,\n      wsConnectTimeoutTriggered: false,\n\n      replMode: ReplMode.TERMINAL,\n\n      replPassword: '',\n      lastCommand: '',\n      inputBuffer: '',\n      errorBuffer: '',\n      broadcastCommandOutputAsTerminalData: false,\n      dataRawBuffer: new Buffer(0),\n\n      isReadingUntil: false,\n      readUntilData: new Buffer(0),\n      readUntilBuffer: new Buffer(0),\n      readUntilPromise: null,\n      readUntilPromiseResolve: null,\n      readUntilPromiseReject: null,\n      readUntilTimeout: null,\n\n      replPromise: null,\n      replPromiseResolve: null,\n      replPromiseReject: null,\n\n      rawReplState: RawReplState.WAITING_FOR_SCRIPT,\n      lastRunScriptTimeNeeded: -1,\n      receivingResponseSubState: RawReplReceivingResponseSubState.SCRIPT_RECEIVING_ERROR,\n\n      putFileSize: 0,\n      putFileData: new Uint8Array(),\n      putFileName: '',\n      putFileDest: '',\n    }\n  }\n\n  /**\n   * Whether currently connected to a device.\n   */\n  isConnected() {\n    return this.state.connectionState === ConnectionState.OPEN\n  }\n\n  isSerialDevice() {\n    return this.state.connectionMode === ConnectionMode.SERIAL\n  }\n\n  isProxyConnection() {\n    return this.state.connectionMode === ConnectionMode.PROXY\n  }\n\n  isTerminalMode() {\n    return this.state.replMode === ReplMode.TERMINAL\n  }\n\n  /**\n   * Get the state object. Mostly used for debugging purposes.\n   */\n  getState() {\n    return this.state\n  }\n\n  private createReplPromise(): Promise<string> {\n    this.state.replPromise = new Promise((resolve, reject) => {\n      this.state.replPromiseResolve = resolve\n      this.state.replPromiseReject = reject\n    })\n    return this.state.replPromise\n  }\n\n  /** The internal webserver is used to proxy runScript commands over an existing connection */\n  public async startInternalWebserver() {\n    debug('startInternalWebserver...')\n    if (webserver) webserver.run(this)\n  }\n\n  private async connectProxy() {\n    this.state.connectionMode = ConnectionMode.PROXY\n\n    const resp = await fetch(`http://localhost:${WEBSERVER_PORT}/api/`)\n    if (resp.status === 200) {\n      const respObj = await resp.json()\n      // console.log(respObj)\n      if (respObj.deviceId === this.state.connectionPath) {\n        this.state.connectionState = ConnectionState.OPEN\n        this.state.replMode = ReplMode.TERMINAL\n        this.clearBuffer()\n        if (this.state.replPromiseResolve) this.state.replPromiseResolve('')\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Connect to a device over the serial interface\n   *\n   * @param path Serial interface (eg. `/dev/ttyUSB0`, `/dev/tty.SLAB_USBtoUART`, ...)\n   * @throws {CouldNotConnect} Connection failed\n   */\n  public async connectSerial(path: string) {\n    debug('connectSerial', path)\n    this.state.connectionPath = `serial:${path}`\n\n    // Connect to serial device\n    this.state.connectionMode = ConnectionMode.SERIAL\n    this.state.connectionState = ConnectionState.CONNECTING\n    this.clearBuffer()\n\n    // Get serialport either through window.SerialPort, or require\n    const SerialPort = typeof window !== 'undefined' && window.SerialPort ? window.SerialPort : require('serialport')\n\n    // Open the serial port\n    this.state.port = new SerialPort(path, { baudRate: 115200 })\n\n    // error listener\n    this.state.port.on('error', async (err: string) => {\n      // On connection-error: try proxy mode (connect to REST API of an existing instance)\n      if (this.state.connectionState === ConnectionState.CONNECTING && err.toString().includes('Resource temporarily unavailable')) {\n        const connectedToProxy = await this.connectProxy()\n        if (connectedToProxy) return\n      }\n\n      if (this.state.replPromiseReject) {\n        debug(err)\n        const e = this.state.connectionState === ConnectionState.CONNECTING ? new CouldNotConnect(err.toString()) : err\n        this.state.replPromiseReject(e)\n      } else {\n        throw err\n      }\n    })\n\n    // on-open listener\n    this.state.port.on('open', () => {\n      // debug('serialport onopen')\n      this.state.connectionState = ConnectionState.OPEN\n      this.state.replMode = ReplMode.TERMINAL\n      this.clearBuffer()\n      if (this.state.replPromiseResolve) this.state.replPromiseResolve('')\n    })\n\n    // data listener\n    this.state.port.on('data', (data: Buffer) => {\n      // debug('Data:', data, data.toString())\n      this.handleProtocolData(data)\n    })\n\n    this.state.port.on('close', () => {\n      this.state.connectionState = ConnectionState.CLOSED\n      if (this.onclose) this.onclose()\n    })\n\n    return this.createReplPromise()\n  }\n\n  /**\n   * Connect to a device over the network (requires enabled WebREPL)\n   *\n   * @param host IP address or hostname\n   * @param password webrepl password\n   * @param timeoutSec Connection timeout (default: 5 sec). To disable, set to 0\n   * @throws {CouldNotConnect} Connection failed\n   */\n  public async connectNetwork(host: string, password: string, timeoutSec = 5): Promise<string> {\n    this.state.connectionMode = ConnectionMode.NETWORK\n\n    // check if already a websocket connection active\n    if (this.state.ws && this.state.ws.readyState !== WebSocket.CLOSED) {  // see also https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/readyState\n      console.warn(\"webrepl: Cannot connect, already active ws connection\", this.state.ws)\n      return ''\n    }\n\n    this.state.connectionPath = `ws://${host}:8266`\n\n    // console.log('connect', uri)\n    this.state.connectionState = ConnectionState.CONNECTING\n    this.state.replPassword = password\n\n    this.state.ws = new WebSocket(this.state.connectionPath)\n    this.state.ws.binaryType = 'arraybuffer'\n\n    // Set the connect timeout\n    if (timeoutSec) {\n      this.state.wsConnectTimeout = setTimeout(() => {\n        this.state.wsConnectTimeoutTriggered = true\n        this.state.ws!.close()\n      }, timeoutSec * 1000)\n    }\n\n    // On connection established, clear the timeout and wait for connection data\n    this.state.ws.onopen = () => {\n      if (this.state.wsConnectTimeout) clearTimeout(this.state.wsConnectTimeout)\n    }\n\n    // Handle messages\n    this.state.ws.onmessage = (event) => this.handleWebsocketMessage(event)\n\n    // Handle errors\n    this.state.ws.onerror = async (err) => {\n      if (this.state.wsConnectTimeoutTriggered) {\n        if (this.state.replPromiseReject) this.state.replPromiseReject(new CouldNotConnect(\"Connect timeout\"))\n        return\n      }\n\n      if (this.state.connectionState === ConnectionState.CONNECTING) {\n        const connectedToProxy = await this.connectProxy()\n        if (connectedToProxy) return\n      }\n\n      const e = this.state.connectionState === ConnectionState.CONNECTING ? new CouldNotConnect(err.message) : err\n      if (this.state.replPromiseReject) this.state.replPromiseReject(e)\n    }\n\n    this.state.ws.onclose = () => {\n      // console.log(`WebSocket onclose`)\n\n      // do nothing if we try to connect to proxy\n      if (this.state.connectionMode === ConnectionMode.PROXY && this.state.connectionState === ConnectionState.CONNECTING) return\n\n      // call close handlers after a successful connection\n      this.state.connectionState = ConnectionState.CLOSED\n      if (this.state.replPromiseResolve) this.state.replPromiseResolve('') // release the 'close' async event\n      if (this.onclose) this.onclose()\n    }\n\n    // create and return a new promise, which is fulfilled only after connecting to repl\n    return this.createReplPromise()\n  }\n\n  /**\n   * Handle special WebREPL only commands data\n   *\n   * getver, putfile, getfile\n   */\n  private handlProtocolSpecialCommandsOutput(data: Uint8Array) {\n    // helper to decode the binary data\n    const decodeWebreplBinaryResponse = (_data: Uint8Array) => {\n      if (_data[0] === 'W'.charCodeAt(0) && _data[1] === 'B'.charCodeAt(0)) {\n        // tslint:disable-next-line: no-bitwise\n        const code = _data[2] | (_data[3] << 8);\n        return code;\n      } else {\n        return -1;\n      }\n    }\n\n    // HANDLE SPECIFIC SPECIAL COMMANDS (getver, putfile, getfile)\n    if (this.state.replMode === ReplMode.PUTFILE_WAITING_FIRST_RESPONSE) {\n      // PUTFILE\n      if (decodeWebreplBinaryResponse(data) === 0) {\n        // send file data in chunks\n        for (let offset = 0; offset < this.state.putFileSize; offset += 1024) {\n          this.sendData(this.state.putFileData.slice(offset, offset + 1024));\n        }\n        this.state.replMode = ReplMode.PUTFILE_WAITING_FINAL_RESPONSE;\n      }\n\n    } else if (this.state.replMode === ReplMode.PUTFILE_WAITING_FINAL_RESPONSE) {\n      // final response for put\n      if (decodeWebreplBinaryResponse(data) === 0) {\n        debug('Upload success');\n        if (this.state.replPromiseResolve) this.state.replPromiseResolve('')\n      } else {\n        console.error('Upload failed');\n        if (this.state.replPromiseReject) this.state.replPromiseReject('Upload failed')\n      }\n      this.state.replMode = ReplMode.TERMINAL\n\n    } else if (this.state.replMode === ReplMode.GETVER_WAITING_RESPONSE) {\n      // GETVER\n      // console.log('got getver response:', data, data.toString())\n      if (this.state.replPromiseResolve) this.state.replPromiseResolve(data.join(\".\"))\n\n    } else {\n      console.log('unkown ArrayBuffer input:', data)\n    }\n  }\n\n  private handleWebsocketMessage(event: WebSocket.MessageEvent) {\n    const dataStr = event.data.toString()\n    // console.log(`onWebsocketMessage`, dataStr)\n    // console.log(`onWebsocketMessage:${event.data instanceof ArrayBuffer ? ' [ArrayBuffer]' : ''}${data.endsWith('\\n') ? ' [End:\\\\n]' : ''}${data.length < 3 ? ' [char0:' + data.charCodeAt(0) + ']'  : ''}`, data.length, data)\n\n    // On closing a ws connection there may be special final bytes (discard)\n    if (this.state.ws!.readyState === WebSocket.CLOSING && dataStr.length === 2 && dataStr.charCodeAt(0) === 65533 && dataStr.charCodeAt(1) === 0) return\n\n    // Handle connecting: enter password and if incorrect throw InvalidPassword\n    if (this.state.connectionState === ConnectionState.CONNECTING) {\n      const dataTrimmed = dataStr.trim()\n      if (dataTrimmed === 'Password:') {\n        this.state.ws!.send(this.state.replPassword + '\\r')\n        return\n\n      } else if (dataTrimmed === 'Access denied') {\n        this.state.ws!.close()  // just to be sure. micropy already closes the connection\n        if (this.state.replPromiseReject) this.state.replPromiseReject(new InvalidPassword('REPL password invalid'))\n        return\n\n      } else if (dataTrimmed.endsWith('\\n>>>')) {\n        this.state.connectionState = ConnectionState.OPEN\n        this.state.replMode = ReplMode.TERMINAL\n        this.clearBuffer()\n        if (this.state.replPromiseResolve) this.state.replPromiseResolve('')\n      }\n    }\n\n    // If data is of type ArrayBuffer, it's a special WebREPL protocol input\n    if (event.data instanceof ArrayBuffer) {\n      const binData = new Uint8Array(event.data);\n      this.handlProtocolSpecialCommandsOutput(binData)\n      return\n    }\n\n    // IMPORTANT: WebSocket from Browser always delivers incoming data as string, whereas in Node.js not necessarily!\n    // Also Uint8Array behaves different than in Node.js, which is why we use https://www.npmjs.com/package/buffer (works in both browser and Node.js)\n    const buf = Buffer.from(event.data as string)\n    this.handleProtocolData(buf)\n  }\n\n  private clearBuffer() {\n    this.state.inputBuffer = ''\n    this.state.errorBuffer = ''\n    this.state.dataRawBuffer = new Buffer(0)\n  }\n\n  /**\n   * Returns a promise that is resolved if `data` is received within `timeout` seconds,\n   * otherwise rejected\n   */\n  private async readUntil(data: Buffer | string, timeout = 10) {\n    this.state.readUntilData = Buffer.isBuffer(data) ? data : Buffer.from(data)\n    this.state.readUntilBuffer = new Buffer(0)\n    this.state.isReadingUntil = true\n\n    // Create promise\n    this.state.readUntilPromise = new Promise((resolve, reject) => {\n      this.state.readUntilPromiseResolve = resolve\n      this.state.readUntilPromiseReject = reject\n    })\n\n    // Set cancel timeout\n    this.state.readUntilTimeout = setTimeout(() => {\n      if (this.state.isReadingUntil && this.state.readUntilPromiseReject) this.state.readUntilPromiseReject(`Error: timeout in readUntil '${data}'`)\n    }, timeout * 1000)\n\n    // Return the promise\n    return this.state.readUntilPromise\n  }\n\n  /**\n   * Handle incoming data\n   */\n  private async handleProtocolData(data: Buffer) {\n    // debug2('handleProtocolData:', data)\n\n    // Special protocol modes: GET_VER, GET_FILE, PUT_FILE\n    if (this.state.replMode === ReplMode.GETVER_WAITING_RESPONSE) {\n      return this.handlProtocolSpecialCommandsOutput(data)\n    }\n\n    if (this.state.isReadingUntil) {\n      this.state.readUntilBuffer = Buffer.concat([this.state.readUntilBuffer, data])\n      if (this.state.readUntilBuffer.includes(this.state.readUntilData)) {\n        debug2('Resolving readingUntilPromise')\n        clearTimeout(this.state.readUntilTimeout)\n        this.state.isReadingUntil = false\n        this.state.readUntilPromiseResolve!('')\n      }\n    }\n\n    // If in terminal mode, just pass terminal on to user defined handler\n    if (this.isConnected() && this.state.replMode === ReplMode.TERMINAL) {\n      if (this.onTerminalData) this.onTerminalData(data.toString())\n      return\n    }\n\n    // Extend raw data buffer (data may come in as chunks with arbitrary length)\n    this.state.dataRawBuffer = Buffer.concat([this.state.dataRawBuffer, data])\n\n    // Perpare strings for easy access\n    const dataStr = this.state.dataRawBuffer.toString()\n    const dataTrimmed = dataStr.trim()\n    debug2('handleProtocolData', data, '=>', dataStr)\n\n    // Handle RAW_MODE data (receiving response, receiving error, waiting for end, changing back to friendly repl)\n    if (this.state.replMode === ReplMode.SCRIPT_RAW_MODE) {\n      if (this.state.rawReplState === RawReplState.SCRIPT_SENT) {\n        // After script is sent, we wait for OK, then stdout_output, then \\x04, then stderr_output\n        // OK[ok_output]\\x04[error_output][x04]>\n        if (dataStr === 'OK') {\n          // debug('ok received, start collecting input')\n          this.clearBuffer()\n          this.state.rawReplState = RawReplState.SCRIPT_RECEIVING_RESPONSE\n          this.state.receivingResponseSubState = RawReplReceivingResponseSubState.SCRIPT_RECEIVING_OUTPUT\n        }\n        return\n      }\n\n      // SCRIPT OUTPUT: OK[ok_output]\\x04[error_output][x04]>\n      if (this.state.rawReplState === RawReplState.SCRIPT_RECEIVING_RESPONSE) {\n\n        // iterate over received bytes\n        for (const entry of data) {\n          // debug(entry)\n\n          // There are 3 special markers: switching from output to error, from error to waiting for end, and\n          if (entry === 0x04 && this.state.receivingResponseSubState === RawReplReceivingResponseSubState.SCRIPT_RECEIVING_OUTPUT) {\n            // debug('switch to error mode')\n            this.state.receivingResponseSubState = RawReplReceivingResponseSubState.SCRIPT_RECEIVING_ERROR\n          } else if (entry === 0x04 && this.state.receivingResponseSubState === RawReplReceivingResponseSubState.SCRIPT_RECEIVING_ERROR) {\n            // debug('switch to end mode')\n            this.state.receivingResponseSubState = RawReplReceivingResponseSubState.SCRIPT_WAITING_FOR_END\n          } else if (entry === 62 && this.state.receivingResponseSubState === RawReplReceivingResponseSubState.SCRIPT_WAITING_FOR_END) {\n            // ALL DONE, now trim the buffers and resolve the promises\n            // debug('all done!!!')\n\n            this.state.inputBuffer = this.state.inputBuffer.trim()\n            this.state.errorBuffer = this.state.errorBuffer.trim()\n            // console.log('END', this.state.inputBuffer, this.state.errorBuffer)\n            this.state.rawReplState = RawReplState.SCRIPT_EXECUTED\n            await this.exitRawRepl()\n\n            if (this.state.errorBuffer.length > 0 && this.state.replPromiseReject) {\n              // Handle error result. Also needs to exit raw repl.\n              this.state.replPromiseReject(new ScriptExecutionError(this.state.errorBuffer))\n\n            } else if (this.state.replPromiseResolve) {\n              this.state.replPromiseResolve(this.state.inputBuffer)\n            }\n\n            this.clearBuffer()\n\n          } else {\n            // Incoming data (stdout or stderr output). Just add to buffer\n            const char = String.fromCharCode(entry)\n            if (this.state.broadcastCommandOutputAsTerminalData && this.onTerminalData) this.onTerminalData(char)\n            if (this.state.receivingResponseSubState === RawReplReceivingResponseSubState.SCRIPT_RECEIVING_OUTPUT) {\n              // debug('adding to buffer:', entry)\n              this.state.inputBuffer += char\n            } else {\n              // debug('adding to error buffer:', entry)\n              this.state.errorBuffer += char\n            }\n          }\n        }\n      }\n    }\n  }\n\n  sendData(data: string | Buffer | ArrayBuffer) {\n    if (this.state.connectionMode === ConnectionMode.NETWORK) {\n      return this.wsSendData(data)\n    } else {\n      if (data instanceof ArrayBuffer) {\n        this.serialSendData(Buffer.from(data))\n      } else {\n        this.serialSendData(data)\n      }\n    }\n  }\n\n  private serialSendData(data: string | Buffer) {\n    // debug('serialSendData', data)\n    this.state.port.write(data)\n  }\n\n  private wsSendData(data: string | ArrayBuffer) {\n    // debug('wsSendData', data)\n    if (!this.state.ws || this.state.ws.readyState !== WebSocket.OPEN) {\n      throw new Error('wsSendData: No open websocket')\n    }\n    this.state.ws.send(data)\n  }\n\n  public async disconnect() {\n    if (webserver) webserver.close()\n\n    if (this.isProxyConnection()) {\n      this.state.connectionState = ConnectionState.CLOSED\n      return\n\n    } else if (this.isSerialDevice()) {\n      await this.state.port.close()\n      this.state.connectionState = ConnectionState.CLOSED\n\n    } else {\n      await this.closeWebsocket()\n    }\n  }\n\n  private async closeWebsocket() {\n    if (this.state.ws && this.state.ws.readyState === WebSocket.OPEN) {\n      // console.log('closing')\n      this.state.ws.close()\n      this.state.connectionState = ConnectionState.CLOSED\n      return this.createReplPromise()\n    } else {\n      debug('Websocket already closed')\n      return false\n    }\n  }\n\n  /**\n   * Execute a Python script on the device, wait and return the output.\n   *\n   * @param script the python code\n   * @param options\n   *\n   * @throws {ScriptExecutionError} on Python code execution error. Includes the Python traceback.\n   */\n  public async runScript(script: string, options: RunScriptOptions = {}): Promise<string> {\n    // Prepare script for execution (dedent by default)\n    if (!options.disableDedent) script = dedent(script)\n    if (options.runGcCollectBeforeCommand) script = \"import gc; gc.collect();\\n\" + script\n\n    debug(`runScript\\n${script}`)\n\n    if (this.isProxyConnection()) {\n      let url = `http://localhost:${WEBSERVER_PORT}/api/run-script/`\n      if (options.stayInRawRepl) url += `?stayInRawRepl=1`\n      debug('run over api', url)\n      const resp = await fetch(url, { method: 'POST', body: script })\n      const content = await resp.text()\n\n      if (resp.status === 512) {\n        // ScriptExecutionError\n        throw new ScriptExecutionError(content)\n\n      } else if (resp.status !== 200) {\n        throw new ScriptExecutionError(`Could not run script via api: status=${resp.status} ${content}`)\n      }\n      return content\n    }\n\n    await this.enterRawRepl()\n    debug('runScript: raw mode entered')\n\n    // Send data to raw repl. Note: cannot send too much data at once over the\n    // network, else the webrepl can't parse it quick enough and returns an error.\n    // Therefore we chunk the data and add a send delay.\n    // 120b and 180ms delay seems to work well for all ESP32 devices.\n    const chunkSize = this.isSerialDevice() ? 3000 : 120;  // how many bytes to send per chunk.\n    const chunkDelayMillis = this.isSerialDevice() ? 0 : 200;  // fixed delay. a progressive delay doesn't seem to help\n    debug(`runScript: ${script.length} bytes -> ${Math.ceil(script.length / chunkSize)} chunks`)\n\n    while (script.length) {\n      const chunk = script.substring(0, chunkSize)\n      script = script.substr(chunkSize)\n      this.sendData(chunk)\n      if (chunkDelayMillis && script.length) await delayMillis(chunkDelayMillis)\n    }\n\n    // debug('runScript: script sent')\n    const millisStart = Date.now()\n\n    // Update state and create a new promise that will be fulfilled when script has run\n    this.state.broadcastCommandOutputAsTerminalData = !!options.broadcastOutputAsTerminalData\n    this.state.rawReplState = RawReplState.SCRIPT_SENT\n    const promise = this.createReplPromise()\n\n    // Send ctrl+D to execute the uploaded script in the raw repl\n    this.sendData('\\x04')\n    debug('runScript: script sent, waiting for response')\n\n    if (options.resolveBeforeResult) return ''\n\n    // wait for script execution\n    const scriptOutput = await promise\n    debug('output', scriptOutput)\n\n    const millisRuntime = Math.round(Date.now() - millisStart)\n    debug(`runScript: script done (${millisRuntime / 1000}sec)`)\n    this.state.lastRunScriptTimeNeeded = millisRuntime\n\n    // await this.exitRawRepl()\n\n    return scriptOutput\n  }\n\n  private async enterRawRepl() {\n    // see also https://github.com/scientifichackers/ampy/blob/master/ampy/pyboard.py#L175\n    // debug('enterRawRepl')\n    if (this.state.replMode === ReplMode.SCRIPT_RAW_MODE) {\n      return debug('enterRawRepl: already in raw repl mode')\n    }\n\n    this.state.replMode = ReplMode.SCRIPT_RAW_MODE\n\n    // Send ctrl-C twice to interrupt any running program\n    this.sendData('\\r\\x03\\x03')\n    // await delayMillis(100) // wait 0.1sec\n\n    try {\n      await this.readUntil('>>>', 5)\n    } catch {\n      // Might be stuck in raw repl. Try to exit into friendly repl with Ctrl+B\n      this.sendData('\\r\\x03\\x02')\n      await this.readUntil('>>>', 5)\n    }\n\n    this.sendData('\\x01')  // ctrl+A\n    await this.readUntil('raw REPL; CTRL-B to exit\\r\\n>')\n\n    this.clearBuffer()\n    this.state.rawReplState = RawReplState.WAITING_FOR_SCRIPT\n  }\n\n  private async exitRawRepl() {\n    // debug('exitRawRepl')\n    if (this.state.replMode !== ReplMode.SCRIPT_RAW_MODE) return\n    this.sendData('\\r\\x02')\n    await this.readUntil('>>>')\n    this.state.replMode = ReplMode.TERMINAL\n  }\n\n  /**\n   * GET_VER webrepl command. Returns the micropython version.\n   * Only works with network connections, not with serial.\n   */\n  public async getVer(): Promise<string> {\n    // debug(`getVer`)\n    if (this.isSerialDevice()) {\n      throw new Error(\"getVer is not possible with a serial connection (only with webrepl)\")\n    }\n\n    const promise = this.createReplPromise()\n\n    this.state.replMode = ReplMode.GETVER_WAITING_RESPONSE\n\n    // WEBREPL_REQ_S = \"<2sBBQLH64s\"\n    const rec = new Uint8Array(2 + 1 + 1 + 8 + 4 + 2 + 64);\n    rec[0] = 'W'.charCodeAt(0);\n    rec[1] = 'A'.charCodeAt(0);\n    rec[2] = 3; // GET_VER\n\n    // initiate put\n    this.sendData(rec)\n    const ret = await promise\n    return ret\n  }\n\n  // public async uploadFile(filename: string, destFilename: string) {\n  //   debug(`uploadFile: ${filename} -> ${destFilename}`)\n\n  //   // const promise = this.createReplPromise()\n\n  //   // this.state.replMode = WebReplMode.PUTFILE_WAITING_FIRST_RESPONSE\n  //   // this.state.putFileName = filename\n  //   // this.state.putFileDest = destFilename\n\n  //   // this.state.putFileData = new Uint8Array(fs.readFileSync(filename))\n  //   // this.state.putFileSize = this.state.putFileData.length\n  //   // debug(`uploadFile: ${this.state.putFileSize} bytes`)\n\n  //   // // WEBREPL_FILE = \"<2sBBQLH64s\"\n  //   // const rec = new Uint8Array(2 + 1 + 1 + 8 + 4 + 2 + 64);\n  //   // rec[0] = 'W'.charCodeAt(0);\n  //   // rec[1] = 'A'.charCodeAt(0);\n  //   // rec[2] = 1; // put\n  //   // rec[3] = 0;\n  //   // rec[4] = 0; rec[5] = 0; rec[6] = 0; rec[7] = 0; rec[8] = 0; rec[9] = 0; rec[10] = 0; rec[11] = 0;\n  //   // // tslint:disable-next-line: no-bitwise\n  //   // rec[12] = this.state.putFileSize & 0xff; rec[13] = (this.state.putFileSize >> 8) & 0xff; rec[14] = (this.state.putFileSize >> 16) & 0xff; rec[15] = (this.state.putFileSize >> 24) & 0xff;\n  //   // // tslint:disable-next-line: no-bitwise\n  //   // rec[16] = this.state.putFileDest.length & 0xff; rec[17] = (this.state.putFileDest.length >> 8) & 0xff;\n  //   // for (let i = 0; i < 64; ++i) {\n  //   //   rec[18 + i] = i < this.state.putFileDest.length ? this.state.putFileDest.charCodeAt(i) : 0\n  //   // }\n\n  //   // // initiate put\n  //   // this.sendData(rec)\n\n  //   // return promise\n  // }\n\n  public async listFiles(directory: string = '/', options: ListFilesOptions = {}): Promise<FileListEntry[]> {\n    const recursive = !!options.recursive\n    const includeSha256 = !!options.includeSha256\n\n    debug(`listFiles: ${directory}, ${recursive}`)\n    const output = await this.runScript(PythonScripts.ls({ directory, recursive, includeSha256 }))\n    const lines = output.split('\\n')\n\n    const ret: FileListEntry[] = []\n    for (const line of lines) {\n      const parts = line.trim().split(' | ')\n      if (parts[0] === '') continue\n      ret.push({\n        filename: parts[0],\n        size: parseInt(parts[2], 10),\n        isDir: parts[1] === 'd',\n        mTime: parseInt(parts[3], 10),\n        sha256: parts[4]\n      })\n    }\n    return ret\n  }\n\n  /**\n   * Get the contents of a file.\n   *\n   * ```typescript\n   * const data = await micropython.getFile('boot.py')\n   * ```\n   *\n   * @returns {Buffer} contents of the file in a Buffer\n   * @param filename filename of file to download\n   * @throws {ScriptExecutionError} if not found: \"`OSError: [Errno 2] ENOENT`\"\n   */\n  public async getFile(filename: string): Promise<Buffer> {\n    debug(`getFile: ${filename}`)\n    const output = await this.runScript(PythonScripts.getFile(filename))\n    return Buffer.from(output, 'hex')\n  }\n\n  public async statPath(path: string): Promise<{ exists: boolean, isDir: boolean, size: number }> {\n    debug(`statPath: ${path}`)\n    const statOutput = await this.runScript(PythonScripts.stat(path))\n    if (statOutput.trim() === 'x') return { exists: false, isDir: false, size: 0 }\n\n    const [isDir, size] = statOutput.split(' | ')\n    return { exists: true, isDir: isDir === 'd', size: parseInt(size, 10) }\n  }\n\n  /**\n   *\n   * @param name\n   * @throws {ScriptExecutionError}\n   */\n  public async mkdir(name: string): Promise<boolean> {\n    debug(`mkdir: ${name}`)\n    const script = `import os; os.mkdir('${name}')`\n    await this.runScript(script)\n    return true\n  }\n\n  /**\n   * Uploading data to the device, saving as a file.\n   *\n   * We break the buffer into multiple chunks, and execute a raw repl command for each of them\n   * in order to not fill up the device RAM.\n   *\n   * See also:\n   * - https://github.com/dhylands/rshell/blob/master/rshell/main.py#L1079\n   * - https://github.com/scientifichackers/ampy/blob/master/ampy/files.py#L209\n   *\n   * @param targetFilename\n   * @param data\n   */\n  public async putFile(targetFilename: string, data: Buffer, options: PutFileOptions = {}) {\n    debug(`putFile: ${targetFilename} (${data.length})`)\n\n    if (options.checkIfSimilarBeforeUpload) {\n      const isAlreadyTheSame = await this.isFileTheSame(targetFilename, data)\n      if (isAlreadyTheSame) return true\n    }\n\n    this.createReplPromise()\n    const dataHex = data.toString('hex')\n    // const chunkSize = this.isSerialDevice() ? 256 : 64\n    const chunkSize = this.isProxyConnection() ? 5000 : this.isSerialDevice() ? 3000 : 64\n\n    const script1 = `import ubinascii; f = open('${targetFilename}', 'wb')`\n    await this.runScript(script1, { stayInRawRepl: true, runGcCollectBeforeCommand: true }) // keeps raw repl open for next instruction\n\n    for (let index = 0; index < dataHex.length; index += chunkSize) {\n      const chunk = dataHex.substr(index, chunkSize)\n      debug('chunk', chunk)\n      const scriptForChunk = `f.write(ubinascii.unhexlify(\"${chunk}\"))`\n      await this.runScript(scriptForChunk, { stayInRawRepl: true }) // keeps raw repl open for next instruction\n    }\n\n    await this.runScript('f.close()') // finally closes raw repl, switching back to friendly\n    return true\n  }\n\n  /**\n   * Remove a file or directory. Optional recursively\n   *\n   * @param path\n   * @param recursive default: false\n   *\n   * @throws {ScriptExecutionError} if not found: \"OSError: [Errno 2] ENOENT\"\n   * @throws {ScriptExecutionError} if directory not empty: \"OSError: 39\"\n   */\n  public async remove(path: string, recursive = false) {\n    debug('remove', path, recursive)\n    const script = recursive ? PythonScripts.deleteEverythingRecurive(path) : `import os; os.remove(\"${path}\")`\n    await this.runScript(script)\n  }\n\n  /**\n   * Rename a file or directory (uos.rename)\n   *\n   * @throws {ScriptExecutionError} if not found: \"OSError: [Errno 2] ENOENT\"\n   * @throws {ScriptExecutionError} if directory not empty: \"OSError: 39\"\n   */\n  public async rename(oldPath: string, newPath: string) {\n    debug('rename', oldPath, newPath)\n    const script = `import os; os.rename(\"${oldPath}\", \"${newPath}\")`\n    await this.runScript(script)\n  }\n\n  /**\n   * Reset a device.\n   */\n  public async reset(options: ResetOptions = {}) {\n    const script = options.softReset ? 'import sys; sys.exit()' : 'import machine; machine.reset()'\n    debug('reset', script, options)\n\n    // Need to exit after sending, because it will not exit the RAW repl mode like any other script\n    // since the device is actually restarting.\n    await this.runScript(script, {\n      broadcastOutputAsTerminalData: options.broadcastOutputAsTerminalData,\n      resolveBeforeResult: true\n    })\n\n    // Serial connection stays open after reset, webrepl closes\n    if (this.isSerialDevice()) {\n      await delayMillis(1000)\n      await this.exitRawRepl()\n    }\n  }\n\n  /**\n   * Get SHA256 hash of a file contents.\n   *\n   * ```typescript\n   * const data = await micropython.getFileHash('boot.py')\n   * ```\n   *\n   * @param filename filename of target file\n   * @returns sha256 hash, hexlified\n   * @throws {ScriptExecutionError} if not found: \"`OSError: [Errno 2] ENOENT`\"\n   */\n  public async getFileHash(filename: string): Promise<string> {\n    debug('getFileHash', filename)\n    const script = PythonScripts.getFileHash(filename)\n    const sha256HexDigest = await this.runScript(script)\n    return sha256HexDigest\n  }\n\n  /**\n   * Check whether a file is the same as provided, within a single `runScript` execution.\n   * Does not work in browser.\n   *\n   * - If filesize is different, then file is different\n   * - If filesize equal then compare sha256 hash\n   *\n   * This is a helper for bulk uploading directories, but only if they have changed.\n   *\n   * @throws {ScriptExecutionError} if not found: \"OSError: [Errno 2] ENOENT\"\n   */\n  public async isFileTheSame(filename: string, data: Buffer) {\n    debug('isFileTheSame', filename, data.length)\n    const crypto = require('crypto')\n    const localHash = crypto.createHash('sha256').update(data).digest('hex')\n    const script = PythonScripts.isFileTheSame(filename, data.length, localHash)\n    const output = await this.runScript(script)\n    return output === '1'\n  }\n\n  /**\n   * Get information about the board.\n   *\n   * ```typescript\n   * const boardInfo = await micropython.getBoardInfo()\n   * console.log(boardInfo)\n   *\n   * {\n   *   sysname: 'esp32',\n   *   nodename: 'esp32',\n   *   release: '1.13.0',\n   *   version: 'v1.13 on 2020-09-02',\n   *   machine: 'ESP32 module with ESP32',\n   *   uniqueId: 'c44f3312f529',\n   *   memFree: 108736,\n   *   fsBlockSize: 4096,\n   *   fsBlocksTotal: 512,\n   *   fsBlocksFree: 438\n   * }\n   * ```\n   */\n  public async getBoardInfo(): Promise<BoardInfo> {\n    debug('getBoardInfo')\n    const script = `\n      import uos, machine, ubinascii, gc\n      try:\n        unique_id = ubinascii.hexlify(machine.unique_id())\n      except:\n        unique_id = None\n      gc.collect()\n      print('mem_free:', gc.mem_free())\n      print('uname:', uos.uname())\n      print('unique_id:', unique_id)\n      print('fsinfo:', uos.statvfs('/'))\n    `\n    const output = await this.runScript(script)\n    const ret: any = {}\n\n    for (const line of output.split('\\n')) {\n      const infoType = line.split(': ')[0]\n      const infoData = line.replace(/^.*: /, '').trim()\n\n      if (infoType === 'uname') {\n        const parts = infoData.substr(1, infoData.length - 2).split(', ')\n        parts.map(part => {\n          const _parts = part.split('=')\n          ret[_parts[0]] = _parts[1].substr(1, _parts[1].length - 2)\n        })\n      } else if (infoType === 'unique_id') {\n        // console.log(infoData)\n        ret.uniqueId = infoData === 'None' ? null : infoData.substr(2, infoData.length - 3)\n      } else if (infoType === 'mem_free') {\n        ret.memFree = parseInt(infoData, 10)\n      } else if (infoType === 'fsinfo') {\n        const parts = infoData.substr(1, infoData.length - 2).split(', ')\n        ret.fsBlockSize = parseInt(parts[0], 10)\n        ret.fsBlocksTotal = parseInt(parts[2], 10)\n        ret.fsBlocksFree = parseInt(parts[3], 10)\n      }\n    }\n    return ret\n  }\n\n  public async gcCollect() {\n    await this.runScript('import gc; gc.collect();')\n  }\n}\n\nexport interface ListFilesOptions {\n  recursive?: boolean\n  includeSha256?: boolean\n}\n\nexport interface RunScriptOptions {\n  /** Whether unnecessary indentation should be kept in the script (default: `false`) */\n  disableDedent?: boolean\n\n  /** Whether to stay in RAW repl mode after execution. Useful for large scripts that need to get executed piece by piece (uploading files, etc.) (default: `false`) */\n  stayInRawRepl?: boolean\n\n  /** Whether to broadcast the received data to the {@linkCode MicroPythonDevice.onTerminalData} callback while receiving (default: `false`) */\n  broadcastOutputAsTerminalData?: boolean\n\n  /** Whether to resolve the promise before waiting for the result (default: `false`) */\n  resolveBeforeResult?: boolean\n\n  runGcCollectBeforeCommand?: boolean\n}\n\nexport interface ResetOptions {\n  softReset?: boolean\n  broadcastOutputAsTerminalData?: boolean\n}\n\nexport interface PutFileOptions {\n  checkIfSimilarBeforeUpload?: boolean  // if true, checks if hash is similar, and only upload if not\n}\n\nexport interface BoardInfo {\n  sysname: string\n  nodename: string\n  release: string\n  version: string\n  machine: string\n  uniqueId: string\n  memFree: number\n  fsBlockSize: number\n  fsBlocksTotal: number\n  fsBlocksFree: number\n}\n","// https://github.com/scientifichackers/ampy/blob/master/ampy/files.py#L88\nexport const ls = (args = { directory: \"/\", recursive: false, includeSha256: false }) => {\n  const { directory, recursive, includeSha256 } = args\n  const finalDir = directory.startsWith(\"/\") ? directory : \"/\" + directory\n\n  let command = `\ntry:\n    import os\nexcept ImportError:\n    import uos as os\n`\n\n  if (includeSha256) {\n    command += `\nimport sys\nimport ubinascii\nimport uhashlib\ndef get_file_stats(filename):\n    stat = os.stat(filename)\n    size = stat[6]\n    mtime = stat[8]\n\n    hasher = uhashlib.sha256()\n    with open(filename, 'rb') as infile:\n        while True:\n            result = infile.read(32)\n            if result == b'':\n                break\n            hasher.update(result)\n    sha256 = ubinascii.hexlify(hasher.digest())\n    return (size, mtime, sha256.decode())\n`\n  } else {\n    command += `\ndef get_file_stats(filename):\n    stat = os.stat(filename)\n    size = stat[6]\n    mtime = stat[8]\n    return (size, mtime, '')\n`\n  }\n\n  if (recursive) {\n    command += `\ndef listdir(directory):\n    result = set()\n    def _listdir(dir_or_file):\n        try:\n            # if its a directory, then it should provide some children.\n            children = os.listdir(dir_or_file)\n        except OSError:\n            # probably a file. run stat() to confirm.\n            file_stats = get_file_stats(dir_or_file)\n            result.add((dir_or_file, False) + file_stats)\n        else:\n            # probably a directory, add to result if empty.\n            result.add((dir_or_file, True, 0, 0, ''))\n            if children:\n                # queue the children to be dealt with in next iteration.\n                for child in children:\n                    # create the full path.\n                    if dir_or_file == '/':\n                        next = dir_or_file + child\n                    else:\n                        next = dir_or_file + '/' + child\n\n                    _listdir(next)\n    _listdir(directory)\n    return sorted(result)\n`\n  } else {\n    command += `\ndef listdir(directory):\n    files = os.ilistdir(directory)\n    out = []\n    for (filename, filetype, inode, _) in files:\n        fn_full = \"/\" + filename if directory == '/' else directory + '/' + filename\n        isdir = filetype == 0x4000\n        if isdir:\n            out.append((fn_full, isdir, 0, 0, ''))\n        else:\n            file_stats = get_file_stats(fn_full)\n            out.append((fn_full, isdir) + file_stats)\n    return sorted(out)\n`\n  }\n\n  command += `\nfor (filename, isdir, size, mtime, sha256) in listdir('${finalDir}'):\n    print(\"%s | %s | %s | %s | %s\" % (filename, 'd' if isdir else 'f', size, mtime, sha256))\n#\n`\n\n  return command\n}\n\nexport const manyPrints = (lines = 200) => {\n  let ret = ''\n  for (let i = 0; i < lines; i++) {\n    ret += `print(${i})\\n`\n  }\n  return ret\n}\n\nexport const getFile = (filename: string) => {\n  return `\nimport sys\nimport ubinascii\nwith open('${filename}', 'rb') as infile:\n    while True:\n        result = infile.read(32)\n        if result == b'':\n            break\n        len = sys.stdout.write(ubinascii.hexlify(result))\n#`  // this # is needed, else we get an error (SyntaxError: invalid syntax)\n}\n\nexport const getFileHash = (filename: string) => {\n  return `\nimport sys\nimport ubinascii\nimport uhashlib\nhasher = uhashlib.sha256()\nwith open('${filename}', 'rb') as infile:\n    while True:\n        result = infile.read(32)\n        if result == b'':\n            break\n        hasher.update(result)\nsys.stdout.write(ubinascii.hexlify(hasher.digest()))\n`  // this # is needed, else we get an error (SyntaxError: invalid syntax)\n}\n\nexport const stat = (path: string) => {\n  return `\ntry:\n    import os\nexcept ImportError:\n    import uos as os\n\ntry:\n  s = os.stat('${path}')\n  print('%s | %s' % ('f' if s[0] == 32768 else 'd', s[6]))\nexcept:\n  print('x')\n#`\n}\n\nexport const isFileTheSame = (filename: string, fileSize: number, sha256Hash: string) => {\n  return `\ntry:\n    import os\nexcept ImportError:\n    import uos as os\nimport sys\nimport ubinascii\nimport uhashlib\n\ndef getHash():\n    hasher = uhashlib.sha256()\n    with open('${filename}', 'rb') as infile:\n        while True:\n            result = infile.read(32)\n            if result == b'':\n                break\n            hasher.update(result)\n    return ubinascii.hexlify(hasher.digest())\n\ndef is_same():\n    try:\n        s = os.stat('${filename}')\n    except OSError:\n        print('0')\n        return\n\n    if ${fileSize} != s[6]:\n        print('0')\n    else:\n        hash = getHash().decode()\n        print(\"1\" if hash == '${sha256Hash}' else \"0\")\n\nis_same()\n#`\n}\n\nexport const deleteEverythingRecurive = (path: string) => {\n  return `\ntry:\n    import os\nexcept ImportError:\n    import uos as os\ndef rmdir(directory):\n    os.chdir(directory)\n    for f in os.listdir():\n        try:\n            os.remove(f)\n        except OSError:\n            pass\n    for f in os.listdir():\n        rmdir(f)\n    os.chdir('..')\n    try:\n      os.rmdir(directory)\n    except OSError:\n      pass\n\nrmdir('${path}')\n`\n}\n","export const WEBSERVER_PORT = 32820\n","import { Buffer } from 'buffer/'\n\n// export const IS_ELECTRON = typeof (navigator) !== 'undefined' && navigator.userAgent.indexOf('Electron/') > -1\n\n// Show debug output when DEBUG variable is set (env or window)\nexport const debug = (...args: any) => {\n  if (!!process.env.DEBUG || (typeof window !== 'undefined' && (window as any).DEBUG)) {\n    console.log(...args)\n  }\n}\n\n// deepdebug, set DEBUG=2\nexport const debug2 = (...args: any) => {\n  if (process.env.DEBUG === '2' || (typeof window !== 'undefined' && (window as any).DEBUG === '2')) {\n    console.log(...args)\n  }\n}\n\nexport const delayMillis = (delayMs: number) => new Promise(resolve => setTimeout(resolve, delayMs));\n\n/**\n * Return trimmed, dedented text.\n * Just like the Python equivalent: https://docs.python.org/3/library/textwrap.html#textwrap.dedent\n */\nexport const dedent = (text: string): string => {\n  // Remove newline from start and end\n  const lines = text.replace(/^\\n|\\s+$/g, '').split(\"\\n\");\n  // console.log(lines)\n  if (lines.length === 0) return text.trim()\n\n  // find smallest common indentation\n  let mindent: number | null = null;\n  lines.forEach(l => {\n    const m = l.match(/^(\\s+)\\S+/);\n    // console.log(m)\n    if (m) {\n      const indent = m[1].length;\n      mindent = mindent ? Math.min(mindent, indent) : indent\n    } else {\n      mindent = 0\n    }\n  })\n\n  // console.log(mindent)\n\n  if (!mindent) return text.trim()\n  const result = lines.map(l => l.slice(mindent!)).join(\"\\n\");\n  return result.trim()\n}\n","import express from 'express'\nimport bodyParser from 'body-parser'\nimport { MicroPythonDevice, RunScriptOptions } from './main'\nimport { WEBSERVER_PORT } from './settings';\nimport { ScriptExecutionError } from './errors';\n\nconst app = express()\napp.use(bodyParser.text());\nlet server;\n\nlet _device: MicroPythonDevice | null = null\n\napp.get('/', (_req, res) => {\n  res.send('Hello World')\n})\n\napp.get('/api', (_req, res) => {\n  res.send({\n    deviceId: _device!.getState().connectionPath\n  });\n})\n\napp.post('/api/run-script', async (req, res) => {\n  // console.log('runscript', req.query)\n  if (!req.body) { return res.status(400).send({ success: false, error: 'no script in request body' })}\n\n  const options: RunScriptOptions = {\n    stayInRawRepl: req.query.stayInRawRepl\n  }\n\n  try {\n    const scriptResponse = await _device!.runScript(req.body, options)\n    return res.send(scriptResponse)\n  } catch (e) {\n    if (e instanceof ScriptExecutionError) {\n      return res.status(512).send(e.message)\n    } else {\n      return res.status(500).send(e.message)\n    }\n  }\n})\n\nexport const close = async () => {\n  server?.close()\n}\n\nexport const run = async (device: MicroPythonDevice) => {\n  _device = device\n  server = app.listen(WEBSERVER_PORT)\n}\n\nif (require.main === module) {\n  const d = new MicroPythonDevice()\n  run(d)\n}\n","module.exports = body-parser;","module.exports = crypto;","module.exports = express;","if(typeof node-fetch === 'undefined') { var e = new Error(\"Cannot find module 'node-fetch'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }\n\nmodule.exports = node-fetch;","module.exports = serialport;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(__webpack_require__.s = 519);\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};"],"sourceRoot":""}